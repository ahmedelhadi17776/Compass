"""Add security, project, organization related models

Revision ID: 33440da881f1
Revises: 
Create Date: 2024-12-28 14:54:40.184718

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '33440da881f1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('storage_path', sa.String(length=512), nullable=False),
    sa.Column('model_metadata', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('RUNNING', 'COMPLETED', 'FAILED', name='aimodelstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_models'))
    )
    op.create_index('ix_ai_models_name_version', 'ai_models', ['name', 'version'], unique=True)
    op.create_index('ix_ai_models_type', 'ai_models', ['type'], unique=False)
    op.create_index('ix_ai_models_type_status', 'ai_models', ['type', 'status'], unique=False)
    op.create_table('content_filter_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('keyword', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_content_filter_rules')),
    sa.UniqueConstraint('keyword', name=op.f('uq_content_filter_rules_keyword'))
    )
    op.create_index(op.f('ix_content_filter_rules_id'), 'content_filter_rules', ['id'], unique=False)
    op.create_table('integrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('integration_type', sa.Enum('API', 'OAUTH', 'WEBHOOK', 'DATABASE', 'CUSTOM', name='integrationtype'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'PENDING', 'ERROR', 'MAINTENANCE', name='integrationstatus'), nullable=False),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('credentials', sa.JSON(), nullable=True),
    sa.Column('headers', sa.JSON(), nullable=True),
    sa.Column('retry_config', sa.JSON(), nullable=True),
    sa.Column('rate_limit', sa.JSON(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.Column('health_check_url', sa.String(length=500), nullable=True),
    sa.Column('last_health_check', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('last_error', sa.String(length=500), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('documentation_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_integrations'))
    )
    op.create_index('ix_integrations_status', 'integrations', ['status'], unique=False)
    op.create_index('ix_integrations_type', 'integrations', ['integration_type'], unique=False)
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_organizations')),
    sa.UniqueConstraint('name', name=op.f('uq_organizations_name'))
    )
    op.create_index('ix_organizations_name', 'organizations', ['name'], unique=True)
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('resource', sa.String(length=50), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permissions')),
    sa.UniqueConstraint('name', name=op.f('uq_permissions_name'))
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
    sa.UniqueConstraint('name', name=op.f('uq_roles_name'))
    )
    op.create_index('ix_roles_name', 'roles', ['name'], unique=True)
    op.create_table('task_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('color_code', sa.String(length=7), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['task_categories.id'], name=op.f('fk_task_categories_parent_id_task_categories')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_categories'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', 'PENDING', 'DELETED', name='userstatus'), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.Column('bio', sa.String(length=500), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('locale', sa.String(length=10), nullable=True),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=True),
    sa.Column('mfa_secret', sa.String(length=32), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name='uq_user_email'),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_index('ix_users_status', 'users', ['status'], unique=False)
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_api_keys_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_api_keys')),
    sa.UniqueConstraint('key', name=op.f('uq_api_keys_key'))
    )
    op.create_index('ix_api_keys_key', 'api_keys', ['key'], unique=True)
    op.create_index('ix_api_keys_user', 'api_keys', ['user_id'], unique=False)
    op.create_table('auth_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.Enum('LOGIN', 'LOGOUT', 'PASSWORD_RESET', 'TWO_FACTOR', 'ACCOUNT_LOCKOUT', 'API_KEY', name='autheventtype'), nullable=False),
    sa.Column('status', sa.Enum('SUCCESS', 'FAILED', 'BLOCKED', 'PENDING', name='authstatus'), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('device_info', sa.JSON(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_auth_log_user_id', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_auth_logs'))
    )
    op.create_index('ix_auth_logs_created_at', 'auth_logs', ['created_at'], unique=False)
    op.create_index('ix_auth_logs_event_type', 'auth_logs', ['event_type'], unique=False)
    op.create_index('ix_auth_logs_status', 'auth_logs', ['status'], unique=False)
    op.create_index('ix_auth_logs_user_id', 'auth_logs', ['user_id'], unique=False)
    op.create_table('cache_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cache_key', sa.String(length=255), nullable=False),
    sa.Column('cache_value', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_cache_user_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cache_entries'))
    )
    op.create_index('ix_cache_entries_key', 'cache_entries', ['cache_key'], unique=True)
    op.create_table('data_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('request_type', sa.Enum('EXPORT', 'DELETION', 'ACCESS', 'CORRECTION', name='datarequesttype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', name='datarequeststatus'), nullable=False),
    sa.Column('data_types', sa.JSON(), nullable=False),
    sa.Column('date_range', sa.JSON(), nullable=True),
    sa.Column('format', sa.String(length=50), nullable=True),
    sa.Column('reason', sa.String(length=500), nullable=True),
    sa.Column('download_url', sa.String(length=1000), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_data_request_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_data_requests'))
    )
    op.create_index('ix_data_requests_status', 'data_requests', ['status'], unique=False)
    op.create_index('ix_data_requests_type', 'data_requests', ['request_type'], unique=False)
    op.create_index('ix_data_requests_user', 'data_requests', ['user_id'], unique=False)
    op.create_table('device_controls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.String(length=100), nullable=False),
    sa.Column('device_name', sa.String(length=255), nullable=False),
    sa.Column('device_type', sa.Enum('SENSOR', 'ACTUATOR', 'CAMERA', 'DISPLAY', 'AUDIO', 'CUSTOM', name='devicetype'), nullable=False),
    sa.Column('status', sa.Enum('ONLINE', 'OFFLINE', 'MAINTENANCE', 'ERROR', 'DISABLED', name='devicestatus'), nullable=False),
    sa.Column('manufacturer', sa.String(length=100), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('firmware_version', sa.String(length=50), nullable=True),
    sa.Column('capabilities', sa.JSON(), nullable=True),
    sa.Column('configuration', sa.JSON(), nullable=True),
    sa.Column('last_ping', sa.DateTime(timezone=True), nullable=True),
    sa.Column('battery_level', sa.Float(), nullable=True),
    sa.Column('signal_strength', sa.Float(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('auto_connect', sa.Boolean(), nullable=False),
    sa.Column('maintenance_mode', sa.Boolean(), nullable=False),
    sa.Column('location', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_device_control_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_device_controls'))
    )
    op.create_index('ix_device_controls_status', 'device_controls', ['status'], unique=False)
    op.create_index('ix_device_controls_type', 'device_controls', ['device_type'], unique=False)
    op.create_index('ix_device_controls_user', 'device_controls', ['user_id'], unique=False)
    op.create_table('emotional_recognitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('emotion', sa.String(length=50), nullable=False),
    sa.Column('confidence_level', sa.Float(), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=False),
    sa.Column('source_data', sa.Text(), nullable=True),
    sa.Column('recognition_metadata', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_emotional_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_emotional_recognitions'))
    )
    op.create_index('ix_emotional_recognitions_timestamp', 'emotional_recognitions', ['timestamp'], unique=False)
    op.create_index('ix_emotional_recognitions_user_id', 'emotional_recognitions', ['user_id'], unique=False)
    op.create_table('feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('BUG', 'FEATURE', 'IMPROVEMENT', 'QUESTION', 'OTHER', name='feedbacktype'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'IN_PROGRESS', 'RESOLVED', 'CLOSED', 'DUPLICATE', name='feedbackstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='feedbackpriority'), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('add_data', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('resolution', sa.Text(), nullable=True),
    sa.Column('resolved_by', sa.Integer(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], name=op.f('fk_feedback_resolved_by_users')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_feedback_user_id', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_feedback'))
    )
    op.create_index('ix_feedback_priority', 'feedback', ['priority'], unique=False)
    op.create_index('ix_feedback_status', 'feedback', ['status'], unique=False)
    op.create_index('ix_feedback_type', 'feedback', ['type'], unique=False)
    op.create_index('ix_feedback_user', 'feedback', ['user_id'], unique=False)
    op.create_table('file_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(length=1000), nullable=False),
    sa.Column('operation', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('checksum', sa.String(length=64), nullable=True),
    sa.Column('extra_informations', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_file_log_user_id', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_file_logs'))
    )
    op.create_index('ix_file_logs_created', 'file_logs', ['created_at'], unique=False)
    op.create_index('ix_file_logs_operation', 'file_logs', ['operation'], unique=False)
    op.create_index('ix_file_logs_user', 'file_logs', ['user_id'], unique=False)
    op.create_table('health_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('health_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_helath_metric_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_health_metrics'))
    )
    op.create_index('ix_health_metrics_created', 'health_metrics', ['created_at'], unique=False)
    op.create_index('ix_health_metrics_type', 'health_metrics', ['metric_type'], unique=False)
    op.create_index('ix_health_metrics_user_id', 'health_metrics', ['user_id'], unique=False)
    op.create_table('integration_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('integration_id', sa.Integer(), nullable=False),
    sa.Column('endpoint', sa.String(length=500), nullable=True),
    sa.Column('method', sa.String(length=10), nullable=True),
    sa.Column('request_data', sa.JSON(), nullable=True),
    sa.Column('response_data', sa.JSON(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.String(length=500), nullable=True),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('correlation_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['integration_id'], ['integrations.id'], name='fk_log_integration', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_integration_logs'))
    )
    op.create_index('ix_integration_logs_created', 'integration_logs', ['created_at'], unique=False)
    op.create_index('ix_integration_logs_integration', 'integration_logs', ['integration_id'], unique=False)
    op.create_index('ix_integration_logs_status', 'integration_logs', ['status'], unique=False)
    op.create_table('model_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_id', sa.Integer(), nullable=False),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('metric_value', sa.Float(), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('dataset_name', sa.String(length=100), nullable=True),
    sa.Column('split_name', sa.String(length=50), nullable=True),
    sa.Column('metric_data', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['ai_models.id'], name='fk_model_metrics_ai_model', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_model_metrics'))
    )
    op.create_index('ix_model_metrics_model_id', 'model_metrics', ['model_id'], unique=False)
    op.create_index('ix_model_metrics_model_name', 'model_metrics', ['model_id', 'metric_name'], unique=False)
    op.create_index('ix_model_metrics_name', 'model_metrics', ['metric_name'], unique=False)
    op.create_index('ix_model_metrics_timestamp', 'model_metrics', ['timestamp'], unique=False)
    op.create_table('model_usage_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=False),
    sa.Column('operation_type', sa.String(length=50), nullable=False),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('execution_time_ms', sa.Integer(), nullable=True),
    sa.Column('memory_usage_mb', sa.Float(), nullable=True),
    sa.Column('cpu_usage_percent', sa.Float(), nullable=True),
    sa.Column('gpu_usage_percent', sa.Float(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('error_message', sa.String(length=500), nullable=True),
    sa.Column('performance_metrics', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('batch_id', sa.String(length=100), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('is_cached', sa.Boolean(), nullable=False),
    sa.Column('cache_hit_rate', sa.Float(), nullable=True),
    sa.CheckConstraint('execution_time_ms >= 0 AND memory_usage_mb >= 0 AND cpu_usage_percent >= 0 AND cpu_usage_percent <= 100 AND gpu_usage_percent >= 0 AND gpu_usage_percent <= 100 AND cache_hit_rate >= 0 AND cache_hit_rate <= 1 AND cost >= 0', name=op.f('ck_model_usage_logs_ck_model_usage_logs_constraints')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_model_usage_logs_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_model_usage_logs'))
    )
    op.create_index('ix_model_usage_logs_model', 'model_usage_logs', ['model_name'], unique=False)
    op.create_index('ix_model_usage_logs_timestamp', 'model_usage_logs', ['timestamp'], unique=False)
    op.create_index('ix_model_usage_logs_user_id', 'model_usage_logs', ['user_id'], unique=False)
    op.create_index('ix_model_usage_logs_user_model', 'model_usage_logs', ['user_id', 'model_name'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_type', sa.Enum('SYSTEM', 'TASK', 'WORKFLOW', 'SECURITY', 'UPDATE', 'REMINDER', name='notificationtype'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', name='notificationpriority'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('deep_link', sa.String(length=1000), nullable=True),
    sa.Column('channels', sa.JSON(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('additional_data', sa.JSON(), nullable=True),
    sa.Column('icon', sa.String(length=100), nullable=True),
    sa.Column('action_buttons', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_notification_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notifications'))
    )
    op.create_index('ix_notifications_created', 'notifications', ['created_at'], unique=False)
    op.create_index('ix_notifications_read', 'notifications', ['is_read'], unique=False)
    op.create_index('ix_notifications_type', 'notifications', ['notification_type'], unique=False)
    op.create_index('ix_notifications_user', 'notifications', ['user_id'], unique=False)
    op.create_table('password_resets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_pass_reset_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_password_resets')),
    sa.UniqueConstraint('token', name=op.f('uq_password_resets_token'))
    )
    op.create_index('ix_password_resets_token', 'password_resets', ['token'], unique=True)
    op.create_index('ix_password_resets_user', 'password_resets', ['user_id'], unique=False)
    op.create_table('privacy_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('data_collection', sa.Boolean(), nullable=True),
    sa.Column('data_sharing', sa.Boolean(), nullable=True),
    sa.Column('marketing_communications', sa.Boolean(), nullable=True),
    sa.Column('analytics_tracking', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_privacy_sett_user_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_privacy_settings')),
    sa.UniqueConstraint('user_id', name=op.f('uq_privacy_settings_user_id'))
    )
    op.create_index(op.f('ix_privacy_settings_id'), 'privacy_settings', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name=op.f('fk_projects_organization_id_organizations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_projects'))
    )
    op.create_index('ix_projects_name', 'projects', ['name'], unique=True)
    op.create_index('ix_projects_organization', 'projects', ['organization_id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='fk_role_permission_permission_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='fk_role_permission_role_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name=op.f('pk_role_permissions')),
    sa.UniqueConstraint('role_id', 'permission_id', name='uq_role_permission')
    )
    op.create_index('ix_role_permissions_permission', 'role_permissions', ['permission_id'], unique=False)
    op.create_index('ix_role_permissions_role', 'role_permissions', ['role_id'], unique=False)
    op.create_table('security_audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Enum('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL', name='loglevel'), nullable=False),
    sa.Column('category', sa.Enum('SYSTEM', 'APPLICATION', 'SECURITY', 'PERFORMANCE', 'DATABASE', 'INTEGRATION', 'USER', name='logcategory'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('trace_id', sa.String(length=255), nullable=True),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('request_data', sa.JSON(), nullable=True),
    sa.Column('environment', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_security_audit_logs_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_security_audit_logs'))
    )
    op.create_index('ix_security_audit_logs_created_at', 'security_audit_logs', ['created_at'], unique=False)
    op.create_index('ix_security_audit_logs_user_id', 'security_audit_logs', ['user_id'], unique=False)
    op.create_table('security_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Enum('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL', name='loglevel'), nullable=False),
    sa.Column('category', sa.Enum('SYSTEM', 'APPLICATION', 'SECURITY', 'PERFORMANCE', 'DATABASE', 'INTEGRATION', 'USER', name='logcategory'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('trace_id', sa.String(length=255), nullable=True),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('request_data', sa.JSON(), nullable=True),
    sa.Column('environment', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_security_events_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_security_events'))
    )
    op.create_index('ix_security_events_created_at', 'security_events', ['created_at'], unique=False)
    op.create_index('ix_security_events_user_id', 'security_events', ['user_id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=False),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('session_type', sa.Enum('WEB', 'MOBILE', 'API', 'SYSTEM', name='sessiontype'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'REVOKED', 'LOGGED_OUT', name='sessionstatus'), nullable=False),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('device_info', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('location_info', sa.JSON(), nullable=True),
    sa.Column('mfa_verified', sa.Boolean(), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_ip', sa.String(length=45), nullable=True),
    sa.Column('security_events', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_session_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sessions')),
    sa.UniqueConstraint('refresh_token', name=op.f('uq_sessions_refresh_token')),
    sa.UniqueConstraint('session_token', name=op.f('uq_sessions_session_token'))
    )
    op.create_index('ix_sessions_refresh', 'sessions', ['refresh_token'], unique=True)
    op.create_index('ix_sessions_status', 'sessions', ['status'], unique=False)
    op.create_index('ix_sessions_token', 'sessions', ['session_token'], unique=True)
    op.create_index('ix_sessions_user', 'sessions', ['user_id'], unique=False)
    op.create_table('system_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Enum('DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL', name='loglevel'), nullable=False),
    sa.Column('category', sa.Enum('SYSTEM', 'APPLICATION', 'SECURITY', 'PERFORMANCE', 'DATABASE', 'INTEGRATION', 'USER', name='logcategory'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('trace_id', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('request_data', sa.JSON(), nullable=True),
    sa.Column('environment', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('host', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_sys_log_user_id', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_system_logs'))
    )
    op.create_index('ix_system_logs_category', 'system_logs', ['category'], unique=False)
    op.create_index('ix_system_logs_created', 'system_logs', ['created_at'], unique=False)
    op.create_index('ix_system_logs_level', 'system_logs', ['level'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tag_type', sa.Enum('SYSTEM', 'USER', 'CATEGORY', 'LABEL', 'STATUS', name='tagtype'), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('extra_metadata', sa.JSON(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='fk_tag_user_id'),
    sa.ForeignKeyConstraint(['parent_id'], ['tags.id'], name=op.f('fk_tags_parent_id_tags')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tags')),
    sa.UniqueConstraint('slug', name=op.f('uq_tags_slug'))
    )
    op.create_index('ix_tags_created_by', 'tags', ['created_by'], unique=False)
    op.create_index('ix_tags_name', 'tags', ['name'], unique=False)
    op.create_index('ix_tags_type', 'tags', ['tag_type'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('theme', sa.String(length=20), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('date_format', sa.String(length=20), nullable=True),
    sa.Column('time_format', sa.String(length=20), nullable=True),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('email_notifications', sa.Boolean(), nullable=False),
    sa.Column('push_notifications', sa.Boolean(), nullable=False),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('accessibility_settings', sa.JSON(), nullable=True),
    sa.Column('workflow_preferences', sa.JSON(), nullable=True),
    sa.Column('dashboard_layout', sa.JSON(), nullable=True),
    sa.Column('shortcuts', sa.JSON(), nullable=True),
    sa.Column('data_sharing', sa.Boolean(), nullable=False),
    sa.Column('analytics_tracking', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_user_pref_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_preferences')),
    sa.UniqueConstraint('user_id', name=op.f('uq_user_preferences_user_id'))
    )
    op.create_index('ix_user_preferences_user', 'user_preferences', ['user_id'], unique=True)
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='fk_user_role_role_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_user_role_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name=op.f('pk_user_roles')),
    sa.UniqueConstraint('user_id', 'role_id', name='uq_user_role')
    )
    op.create_index('ix_user_roles_role', 'user_roles', ['role_id'], unique=False)
    op.create_index('ix_user_roles_user', 'user_roles', ['user_id'], unique=False)
    op.create_table('web_search_queries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('query_text', sa.Text(), nullable=False),
    sa.Column('search_type', sa.String(length=50), nullable=False),
    sa.Column('filters', sa.JSON(), nullable=True),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.Column('result_count', sa.Integer(), nullable=True),
    sa.Column('execution_time', sa.Float(), nullable=True),
    sa.Column('is_cached', sa.Boolean(), nullable=True),
    sa.Column('cache_hit', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_web_search_queries_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_web_search_queries'))
    )
    op.create_index('ix_web_search_queries_timestamp', 'web_search_queries', ['execution_time'], unique=False)
    op.create_index('ix_web_search_queries_type', 'web_search_queries', ['search_type'], unique=False)
    op.create_index('ix_web_search_queries_user_id', 'web_search_queries', ['user_id'], unique=False)
    op.create_table('workflows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'PAUSED', 'ARCHIVED', 'DEPRECATED', name='workflowstatus'), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('triggers', sa.JSON(), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('archived_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='fk_workflow_created_by_user_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflows'))
    )
    op.create_index('ix_workflows_category', 'workflows', ['category'], unique=False)
    op.create_index('ix_workflows_creator', 'workflows', ['created_by'], unique=False)
    op.create_index('ix_workflows_status', 'workflows', ['status'], unique=False)
    op.create_table('data_archives',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('data_type', sa.String(length=100), nullable=False),
    sa.Column('original_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('more_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['request_id'], ['data_requests.id'], name='fk_data_archive_data_requests', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_data_archives'))
    )
    op.create_index('ix_data_archives_request', 'data_archives', ['request_id'], unique=False)
    op.create_index('ix_data_archives_type', 'data_archives', ['data_type'], unique=False)
    op.create_table('device_control_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.String(length=500), nullable=True),
    sa.Column('execution_time', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device_controls.id'], name='fk_device_log_device_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_device_log_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_device_control_logs'))
    )
    op.create_index('idx_device_control_logs_created', 'device_control_logs', ['created_at'], unique=False)
    op.create_index('idx_device_control_logs_device', 'device_control_logs', ['device_id'], unique=False)
    op.create_index('idx_device_control_logs_user', 'device_control_logs', ['user_id'], unique=False)
    op.create_table('feedback_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feedback_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_internal', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['feedback_id'], ['feedback.id'], name='fk_feedback_comm_feedback', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_feedback_comm_user_id', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_feedback_comments'))
    )
    op.create_index('ix_feedback_comments_feedback', 'feedback_comments', ['feedback_id'], unique=False)
    op.create_index('ix_feedback_comments_user', 'feedback_comments', ['user_id'], unique=False)
    op.create_table('summaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(length=50), nullable=False),
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('key_points', sa.JSON(), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=False),
    sa.Column('model_version', sa.String(length=50), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('extra_info', sa.JSON(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('cache_entry_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_validated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['cache_entry_id'], ['cache_entries.id'], name=op.f('fk_summaries_cache_entry_id_cache_entries'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_summaries_user_id_users'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_summaries'))
    )
    op.create_index('ix_summaries_content_type_id', 'summaries', ['content_type', 'content_id'], unique=True)
    op.create_index('ix_summaries_created_at', 'summaries', ['created_at'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('assignee_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('TODO', 'IN_PROGRESS', 'REVIEW', 'BLOCKED', 'COMPLETED', 'CANCELLED', 'ARCHIVED', name='taskstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', 'CRITICAL', name='taskpriority'), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('cache_entry_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['users.id'], name='fk_assigned_user_id'),
    sa.ForeignKeyConstraint(['cache_entry_id'], ['cache_entries.id'], name=op.f('fk_tasks_cache_entry_id_cache_entries'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['category_id'], ['task_categories.id'], name='fk_task_cat_id'),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], name='fk_task_creator_user_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_task_user_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name='fk_task_workflow_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tasks')),
    sa.UniqueConstraint('title', 'user_id', name='uq_task_title_user')
    )
    op.create_index('ix_tasks_due_date', 'tasks', ['due_date'], unique=False)
    op.create_index('ix_tasks_priority', 'tasks', ['priority'], unique=False)
    op.create_index('ix_tasks_status', 'tasks', ['status'], unique=False)
    op.create_index('ix_tasks_user', 'tasks', ['user_id'], unique=False)
    op.create_table('workflow_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('step_type', sa.Enum('TASK', 'APPROVAL', 'NOTIFICATION', 'AUTOMATION', 'CONDITION', 'INTEGRATION', name='workflowsteptype'), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.Column('retry_config', sa.JSON(), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=False),
    sa.Column('auto_advance', sa.Boolean(), nullable=False),
    sa.Column('can_revert', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name='fk_workflow_step_workflow_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_steps'))
    )
    op.create_index('ix_workflow_steps_type', 'workflow_steps', ['step_type'], unique=False)
    op.create_index('ix_workflow_steps_workflow', 'workflow_steps', ['workflow_id'], unique=False)
    op.create_table('task_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=512), nullable=False),
    sa.Column('file_type', sa.String(length=100), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='fk_task_attach_task_id'),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], name='fk_task_attach_user_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_attachments'))
    )
    op.create_table('task_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['task_comments.id'], name=op.f('fk_task_comments_parent_id_task_comments')),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='fk_task_comm_task_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_task_comm_user_id'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_comments'))
    )
    op.create_table('task_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('field', sa.String(), nullable=True),
    sa.Column('old_value', sa.String(), nullable=True),
    sa.Column('new_value', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='fk_task_hist_task_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_task_hist_user_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task_history'))
    )
    op.create_index(op.f('ix_task_history_id'), 'task_history', ['id'], unique=False)
    op.create_table('task_tags',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name='fk_task_tags_tag_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name='fk_task_tags_task_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('task_id', 'tag_id', name=op.f('pk_task_tags')),
    sa.UniqueConstraint('task_id', 'tag_id', name='uq_task_tags')
    )
    op.create_index('ix_task_tags_tag', 'task_tags', ['tag_id'], unique=False)
    op.create_index('ix_task_tags_task', 'task_tags', ['task_id'], unique=False)
    op.create_table('workflow_transitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_step_id', sa.Integer(), nullable=False),
    sa.Column('to_step_id', sa.Integer(), nullable=False),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('triggers', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['from_step_id'], ['workflow_steps.id'], name='fk_workflow_trans_workflow_steps_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_step_id'], ['workflow_steps.id'], name='fk_workflow_trans_to_workflow_id', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_transitions'))
    )
    op.create_index('ix_workflow_transitions_from', 'workflow_transitions', ['from_step_id'], unique=False)
    op.create_index('ix_workflow_transitions_to', 'workflow_transitions', ['to_step_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_workflow_transitions_to', table_name='workflow_transitions')
    op.drop_index('ix_workflow_transitions_from', table_name='workflow_transitions')
    op.drop_table('workflow_transitions')
    op.drop_index('ix_task_tags_task', table_name='task_tags')
    op.drop_index('ix_task_tags_tag', table_name='task_tags')
    op.drop_table('task_tags')
    op.drop_index(op.f('ix_task_history_id'), table_name='task_history')
    op.drop_table('task_history')
    op.drop_table('task_comments')
    op.drop_table('task_attachments')
    op.drop_index('ix_workflow_steps_workflow', table_name='workflow_steps')
    op.drop_index('ix_workflow_steps_type', table_name='workflow_steps')
    op.drop_table('workflow_steps')
    op.drop_index('ix_tasks_user', table_name='tasks')
    op.drop_index('ix_tasks_status', table_name='tasks')
    op.drop_index('ix_tasks_priority', table_name='tasks')
    op.drop_index('ix_tasks_due_date', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index('ix_summaries_created_at', table_name='summaries')
    op.drop_index('ix_summaries_content_type_id', table_name='summaries')
    op.drop_table('summaries')
    op.drop_index('ix_feedback_comments_user', table_name='feedback_comments')
    op.drop_index('ix_feedback_comments_feedback', table_name='feedback_comments')
    op.drop_table('feedback_comments')
    op.drop_index('idx_device_control_logs_user', table_name='device_control_logs')
    op.drop_index('idx_device_control_logs_device', table_name='device_control_logs')
    op.drop_index('idx_device_control_logs_created', table_name='device_control_logs')
    op.drop_table('device_control_logs')
    op.drop_index('ix_data_archives_type', table_name='data_archives')
    op.drop_index('ix_data_archives_request', table_name='data_archives')
    op.drop_table('data_archives')
    op.drop_index('ix_workflows_status', table_name='workflows')
    op.drop_index('ix_workflows_creator', table_name='workflows')
    op.drop_index('ix_workflows_category', table_name='workflows')
    op.drop_table('workflows')
    op.drop_index('ix_web_search_queries_user_id', table_name='web_search_queries')
    op.drop_index('ix_web_search_queries_type', table_name='web_search_queries')
    op.drop_index('ix_web_search_queries_timestamp', table_name='web_search_queries')
    op.drop_table('web_search_queries')
    op.drop_index('ix_user_roles_user', table_name='user_roles')
    op.drop_index('ix_user_roles_role', table_name='user_roles')
    op.drop_table('user_roles')
    op.drop_index('ix_user_preferences_user', table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index('ix_tags_type', table_name='tags')
    op.drop_index('ix_tags_name', table_name='tags')
    op.drop_index('ix_tags_created_by', table_name='tags')
    op.drop_table('tags')
    op.drop_index('ix_system_logs_level', table_name='system_logs')
    op.drop_index('ix_system_logs_created', table_name='system_logs')
    op.drop_index('ix_system_logs_category', table_name='system_logs')
    op.drop_table('system_logs')
    op.drop_index('ix_sessions_user', table_name='sessions')
    op.drop_index('ix_sessions_token', table_name='sessions')
    op.drop_index('ix_sessions_status', table_name='sessions')
    op.drop_index('ix_sessions_refresh', table_name='sessions')
    op.drop_table('sessions')
    op.drop_index('ix_security_events_user_id', table_name='security_events')
    op.drop_index('ix_security_events_created_at', table_name='security_events')
    op.drop_table('security_events')
    op.drop_index('ix_security_audit_logs_user_id', table_name='security_audit_logs')
    op.drop_index('ix_security_audit_logs_created_at', table_name='security_audit_logs')
    op.drop_table('security_audit_logs')
    op.drop_index('ix_role_permissions_role', table_name='role_permissions')
    op.drop_index('ix_role_permissions_permission', table_name='role_permissions')
    op.drop_table('role_permissions')
    op.drop_index('ix_projects_organization', table_name='projects')
    op.drop_index('ix_projects_name', table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_privacy_settings_id'), table_name='privacy_settings')
    op.drop_table('privacy_settings')
    op.drop_index('ix_password_resets_user', table_name='password_resets')
    op.drop_index('ix_password_resets_token', table_name='password_resets')
    op.drop_table('password_resets')
    op.drop_index('ix_notifications_user', table_name='notifications')
    op.drop_index('ix_notifications_type', table_name='notifications')
    op.drop_index('ix_notifications_read', table_name='notifications')
    op.drop_index('ix_notifications_created', table_name='notifications')
    op.drop_table('notifications')
    op.drop_index('ix_model_usage_logs_user_model', table_name='model_usage_logs')
    op.drop_index('ix_model_usage_logs_user_id', table_name='model_usage_logs')
    op.drop_index('ix_model_usage_logs_timestamp', table_name='model_usage_logs')
    op.drop_index('ix_model_usage_logs_model', table_name='model_usage_logs')
    op.drop_table('model_usage_logs')
    op.drop_index('ix_model_metrics_timestamp', table_name='model_metrics')
    op.drop_index('ix_model_metrics_name', table_name='model_metrics')
    op.drop_index('ix_model_metrics_model_name', table_name='model_metrics')
    op.drop_index('ix_model_metrics_model_id', table_name='model_metrics')
    op.drop_table('model_metrics')
    op.drop_index('ix_integration_logs_status', table_name='integration_logs')
    op.drop_index('ix_integration_logs_integration', table_name='integration_logs')
    op.drop_index('ix_integration_logs_created', table_name='integration_logs')
    op.drop_table('integration_logs')
    op.drop_index('ix_health_metrics_user_id', table_name='health_metrics')
    op.drop_index('ix_health_metrics_type', table_name='health_metrics')
    op.drop_index('ix_health_metrics_created', table_name='health_metrics')
    op.drop_table('health_metrics')
    op.drop_index('ix_file_logs_user', table_name='file_logs')
    op.drop_index('ix_file_logs_operation', table_name='file_logs')
    op.drop_index('ix_file_logs_created', table_name='file_logs')
    op.drop_table('file_logs')
    op.drop_index('ix_feedback_user', table_name='feedback')
    op.drop_index('ix_feedback_type', table_name='feedback')
    op.drop_index('ix_feedback_status', table_name='feedback')
    op.drop_index('ix_feedback_priority', table_name='feedback')
    op.drop_table('feedback')
    op.drop_index('ix_emotional_recognitions_user_id', table_name='emotional_recognitions')
    op.drop_index('ix_emotional_recognitions_timestamp', table_name='emotional_recognitions')
    op.drop_table('emotional_recognitions')
    op.drop_index('ix_device_controls_user', table_name='device_controls')
    op.drop_index('ix_device_controls_type', table_name='device_controls')
    op.drop_index('ix_device_controls_status', table_name='device_controls')
    op.drop_table('device_controls')
    op.drop_index('ix_data_requests_user', table_name='data_requests')
    op.drop_index('ix_data_requests_type', table_name='data_requests')
    op.drop_index('ix_data_requests_status', table_name='data_requests')
    op.drop_table('data_requests')
    op.drop_index('ix_cache_entries_key', table_name='cache_entries')
    op.drop_table('cache_entries')
    op.drop_index('ix_auth_logs_user_id', table_name='auth_logs')
    op.drop_index('ix_auth_logs_status', table_name='auth_logs')
    op.drop_index('ix_auth_logs_event_type', table_name='auth_logs')
    op.drop_index('ix_auth_logs_created_at', table_name='auth_logs')
    op.drop_table('auth_logs')
    op.drop_index('ix_api_keys_user', table_name='api_keys')
    op.drop_index('ix_api_keys_key', table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_index('ix_users_status', table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_table('users')
    op.drop_table('task_categories')
    op.drop_index('ix_roles_name', table_name='roles')
    op.drop_table('roles')
    op.drop_table('permissions')
    op.drop_index('ix_organizations_name', table_name='organizations')
    op.drop_table('organizations')
    op.drop_index('ix_integrations_type', table_name='integrations')
    op.drop_index('ix_integrations_status', table_name='integrations')
    op.drop_table('integrations')
    op.drop_index(op.f('ix_content_filter_rules_id'), table_name='content_filter_rules')
    op.drop_table('content_filter_rules')
    op.drop_index('ix_ai_models_type_status', table_name='ai_models')
    op.drop_index('ix_ai_models_type', table_name='ai_models')
    op.drop_index('ix_ai_models_name_version', table_name='ai_models')
    op.drop_table('ai_models')
    # ### end Alembic commands ###
