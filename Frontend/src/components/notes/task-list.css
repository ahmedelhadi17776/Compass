/* Task list styles */
.ProseMirror {
  --tt-checklist-bg-color: rgba(255, 255, 255, 0.1);
  --tt-checklist-bg-active-color: rgba(255, 255, 255, 0.9);
  --tt-checklist-border-color: rgba(255, 255, 255, 0.4);
  --tt-checklist-border-active-color: rgba(255, 255, 255, 0.9);
  --tt-checklist-check-icon-color: #000;
  --tt-checklist-text-active: rgba(255, 255, 255, 0.9);
}

/* Task lists */
.ProseMirror ul[data-type="taskList"] {
  padding-left: 1.45em;
  list-style: none !important;
}

.ProseMirror ul[data-type="taskList"] li {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  gap: 0.75em;
  margin-bottom: 0.75em;
  padding-top: 0.1em;
}

.ProseMirror ul[data-type="taskList"] li[data-checked="true"] > div > p {
  opacity: 0.5;
  text-decoration: line-through;
}

.ProseMirror ul[data-type="taskList"] li[data-checked="true"] > div > p span {
  text-decoration: line-through;
}

.ProseMirror ul[data-type="taskList"] li label {
  position: relative;
  padding-top: 0.25em;
  margin-left: -1.625em;
}

.ProseMirror ul[data-type="taskList"] li label input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.ProseMirror ul[data-type="taskList"] li label span {
  display: block;
  width: 1.5em;
  height: 1.5em;
  border: 2px solid var(--tt-checklist-border-color);
  border-radius: 0.375rem;
  position: relative;
  cursor: pointer;
  background-color: var(--tt-checklist-bg-color);
  transition:
    background-color 80ms ease-out,
    border-color 80ms ease-out;
}

.ProseMirror ul[data-type="taskList"] li label span::before {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 1em;
  height: 1em;
  background-color: var(--tt-checklist-check-icon-color);
  opacity: 0;
  -webkit-mask: url("data:image/svg+xml,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22currentColor%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M21.4142%204.58579C22.1953%205.36683%2022.1953%206.63317%2021.4142%207.41421L10.4142%2018.4142C9.63317%2019.1953%208.36684%2019.1953%207.58579%2018.4142L2.58579%2013.4142C1.80474%2012.6332%201.80474%2011.3668%202.58579%2010.5858C3.36683%209.80474%204.63317%209.80474%205.41421%2010.5858L9%2014.1716L18.5858%204.58579C19.3668%203.80474%2020.6332%203.80474%2021.4142%204.58579Z%22%20fill%3D%22currentColor%22%2F%3E%3C%2Fsvg%3E")
    center/contain no-repeat;
  mask: url("data:image/svg+xml,%3Csvg%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22currentColor%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill-rule%3D%22evenodd%22%20clip-rule%3D%22evenodd%22%20d%3D%22M21.4142%204.58579C22.1953%205.36683%2022.1953%206.63317%2021.4142%207.41421L10.4142%2018.4142C9.63317%2019.1953%208.36684%2019.1953%207.58579%2018.4142L2.58579%2013.4142C1.80474%2012.6332%201.80474%2011.3668%202.58579%2010.5858C3.36683%209.80474%204.63317%209.80474%205.41421%2010.5858L9%2014.1716L18.5858%204.58579C19.3668%203.80474%2020.6332%203.80474%2021.4142%204.58579Z%22%20fill%3D%22currentColor%22%2F%3E%3C%2Fsvg%3E")
    center/contain no-repeat;
}

.ProseMirror ul[data-type="taskList"] li label input[type="checkbox"]:checked + span {
  background: var(--tt-checklist-bg-active-color);
  border-color: var(--tt-checklist-border-active-color);
}

.ProseMirror ul[data-type="taskList"] li label input[type="checkbox"]:checked + span::before {
  opacity: 1;
}

.ProseMirror ul[data-type="taskList"] li div {
  flex: 1 1 0%;
  min-width: 0;
  padding-top: 0.125em;
} 