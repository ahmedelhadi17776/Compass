worker_processes auto;
events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    client_max_body_size 10M;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log warn;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # Upstreams
    upstream go_backend {
        server compass-api-service:8000;
    }
    upstream python_backend {
        server backend-python:8001;
    }
    upstream notes_server {
        server notes-server:5000;
    }

    server {
        listen 80;
        server_name compass.local;

        # Redirect HTTP to HTTPS (optional)
        # return 301 https://$host$request_uri;

        # SSL config (if using HTTPS)
        # listen 443 ssl;
        # ssl_certificate /etc/nginx/certs/server.crt;
        # ssl_certificate_key /etc/nginx/certs/server.key;

        # CORS
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH';
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With';
        add_header 'Access-Control-Allow-Credentials' 'true';

        # Rate limiting
        limit_req zone=api_limit burst=20 nodelay;

        # API routes
        location /api/ {
            proxy_pass http://go_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Authorization $http_authorization;
            proxy_read_timeout 60s;
        }

        # AI routes
        location /ai/ {
            proxy_pass http://python_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Authorization $http_authorization;
            proxy_read_timeout 120s;
        }
        location /mcp/ {
            proxy_pass http://python_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Authorization $http_authorization;
            proxy_read_timeout 120s;
        }

        # Notes server API
        location /notes/ {
            proxy_pass http://notes_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Authorization $http_authorization;
            # Forward user ID from Go backend if available
            proxy_set_header X-User-Id $http_x_user_id;
            proxy_read_timeout 60s;
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, X-User-Id';
            add_header 'Access-Control-Allow-Credentials' 'true';
        }

        # Static frontend
        location /static/ {
            alias /usr/share/nginx/html/static/;
            try_files $uri $uri/ =404;
        }
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }
    }
} 