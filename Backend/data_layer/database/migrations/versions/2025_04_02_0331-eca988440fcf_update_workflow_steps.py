"""update workflow_steps

Revision ID: eca988440fcf
Revises: ce5f87533a7c
Create Date: 2025-04-02 03:31:11.848219+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import Enum


# revision identifiers, used by Alembic.
revision: str = 'eca988440fcf'
down_revision: Union[str, None] = 'ce5f87533a7c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the enum types first
    stepstatus_enum = Enum('pending', 'active', 'completed', 'skipped', 'failed', 
                          name='stepstatus', create_type=True, schema=None)
    stepstatus_enum.create(op.get_bind(), checkfirst=True)
    
    steptype_enum = Enum('manual', 'automated', 'approval', 'notification', 'integration', 'decision', 'ai_task', 
                         name='steptype', create_type=True, schema=None)
    steptype_enum.create(op.get_bind(), checkfirst=True)
    
    op.add_column('workflow_executions', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_index('ix_workflow_executions_status', 'workflow_executions', ['status'], unique=False)
    op.create_index('ix_workflow_executions_workflow_id', 'workflow_executions', ['workflow_id'], unique=False)
    op.drop_constraint('workflow_executions_workflow_id_fkey', 'workflow_executions', type_='foreignkey')
    op.create_foreign_key(None, 'workflow_executions', 'workflows', ['workflow_id'], ['id'], ondelete='CASCADE')
    op.add_column('workflow_step_executions', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_index('ix_workflow_step_executions_execution_id', 'workflow_step_executions', ['execution_id'], unique=False)
    op.create_index('ix_workflow_step_executions_status', 'workflow_step_executions', ['status'], unique=False)
    op.create_index('ix_workflow_step_executions_step_id', 'workflow_step_executions', ['step_id'], unique=False)
    
    # Now add the columns using the created enum types
    op.add_column('workflow_steps', sa.Column('status', stepstatus_enum, server_default='pending', nullable=False))
    op.add_column('workflow_steps', sa.Column('dependencies', sa.JSON(), server_default='[]', nullable=False))
    op.add_column('workflow_steps', sa.Column('version', sa.String(length=50), server_default='1.0.0', nullable=False))
    op.add_column('workflow_steps', sa.Column('previous_version_id', sa.Integer(), nullable=True))
    op.add_column('workflow_steps', sa.Column('average_execution_time', sa.Float(), server_default='0.0', nullable=False))
    op.add_column('workflow_steps', sa.Column('success_rate', sa.Float(), server_default='0.0', nullable=False))
    op.add_column('workflow_steps', sa.Column('last_execution_result', sa.JSON(), nullable=True))
    op.add_column('workflow_steps', sa.Column('assigned_to', sa.Integer(), nullable=True))
    op.add_column('workflow_steps', sa.Column('notification_config', sa.JSON(), nullable=True))
    
    # Alter the step_type column to use the enum
    op.alter_column('workflow_steps', 'step_type',
               existing_type=sa.VARCHAR(length=50),
               type_=steptype_enum,
               existing_nullable=False,
               postgresql_using="step_type::steptype")
               
    op.create_foreign_key(None, 'workflow_steps', 'users', ['assigned_to'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'workflow_steps', type_='foreignkey')
    op.alter_column('workflow_steps', 'step_type',
               existing_type=Enum('manual', 'automated', 'approval', 'notification', 'integration', 'decision', 'ai_task', name='steptype'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_column('workflow_steps', 'notification_config')
    op.drop_column('workflow_steps', 'assigned_to')
    op.drop_column('workflow_steps', 'last_execution_result')
    op.drop_column('workflow_steps', 'success_rate')
    op.drop_column('workflow_steps', 'average_execution_time')
    op.drop_column('workflow_steps', 'previous_version_id')
    op.drop_column('workflow_steps', 'version')
    op.drop_column('workflow_steps', 'dependencies')
    op.drop_column('workflow_steps', 'status')
    op.drop_index('ix_workflow_step_executions_step_id', table_name='workflow_step_executions')
    op.drop_index('ix_workflow_step_executions_status', table_name='workflow_step_executions')
    op.drop_index('ix_workflow_step_executions_execution_id', table_name='workflow_step_executions')
    op.drop_column('workflow_step_executions', 'updated_at')
    op.drop_constraint(None, 'workflow_executions', type_='foreignkey')
    op.create_foreign_key('workflow_executions_workflow_id_fkey', 'workflow_executions', 'workflows', ['workflow_id'], ['id'])
    op.drop_index('ix_workflow_executions_workflow_id', table_name='workflow_executions')
    op.drop_index('ix_workflow_executions_status', table_name='workflow_executions')
    op.drop_column('workflow_executions', 'updated_at')
    
    # Drop the enum types
    steptype_enum = Enum('manual', 'automated', 'approval', 'notification', 'integration', 'decision', 'ai_task', name='steptype')
    steptype_enum.drop(op.get_bind(), checkfirst=True)
    
    stepstatus_enum = Enum('pending', 'active', 'completed', 'skipped', 'failed', name='stepstatus')
    stepstatus_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
