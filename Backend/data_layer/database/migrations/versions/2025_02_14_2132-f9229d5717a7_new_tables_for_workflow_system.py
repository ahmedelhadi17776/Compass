"""new tables for workflow system

Revision ID: f9229d5717a7
Revises: 579458d66d10
Create Date: 2025-02-14 21:32:07.056960+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f9229d5717a7'
down_revision: Union[str, None] = '579458d66d10'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('workflow_step_executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('execution_id', sa.Integer(), nullable=False),
    sa.Column('step_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['execution_id'], ['workflow_executions.id'], ),
    sa.ForeignKeyConstraint(['step_id'], ['workflow_steps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflow_step_executions_id'), 'workflow_step_executions', ['id'], unique=False)
    op.add_column('workflow_executions', sa.Column('started_at', sa.DateTime(), nullable=True))
    op.add_column('workflow_executions', sa.Column('completed_at', sa.DateTime(), nullable=True))
    op.add_column('workflow_executions', sa.Column('result', sa.JSON(), nullable=True))
    op.add_column('workflow_executions', sa.Column('error', sa.String(), nullable=True))
    op.alter_column('workflow_executions', 'workflow_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('workflow_executions_workflow_id_fkey', 'workflow_executions', type_='foreignkey')
    op.create_foreign_key(None, 'workflow_executions', 'workflows', ['workflow_id'], ['id'])
    op.drop_column('workflow_executions', 'start_time')
    op.drop_column('workflow_executions', 'error_log')
    op.drop_column('workflow_executions', 'performance_metrics')
    op.drop_column('workflow_executions', 'end_time')
    op.add_column('workflows', sa.Column('organization_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'workflows', 'organizations', ['organization_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'workflows', type_='foreignkey')
    op.drop_column('workflows', 'organization_id')
    op.add_column('workflow_executions', sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('workflow_executions', sa.Column('performance_metrics', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('workflow_executions', sa.Column('error_log', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('workflow_executions', sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'workflow_executions', type_='foreignkey')
    op.create_foreign_key('workflow_executions_workflow_id_fkey', 'workflow_executions', 'workflows', ['workflow_id'], ['id'], ondelete='CASCADE')
    op.alter_column('workflow_executions', 'workflow_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('workflow_executions', 'error')
    op.drop_column('workflow_executions', 'result')
    op.drop_column('workflow_executions', 'completed_at')
    op.drop_column('workflow_executions', 'started_at')
    op.drop_index(op.f('ix_workflow_step_executions_id'), table_name='workflow_step_executions')
    op.drop_table('workflow_step_executions')
    # ### end Alembic commands ###
