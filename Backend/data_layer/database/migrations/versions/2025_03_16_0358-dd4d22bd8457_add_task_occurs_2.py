"""add task occurs 2

Revision ID: dd4d22bd8457
Revises: 145e7e6e7b77
Create Date: 2025-03-16 03:58:42.849506+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dd4d22bd8457'
down_revision: Union[str, None] = '145e7e6e7b77'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_occurrences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('occurrence_num', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('assignee_id', sa.Integer(), nullable=True),
    sa.Column('reviewer_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('modified_by_id', sa.Integer(), nullable=False),
    sa.Column('progress_metrics', sa.JSON(), server_default=sa.text("json('{}')"), nullable=True),
    sa.Column('blockers', sa.JSON(), server_default=sa.text("json('[]')"), nullable=True),
    sa.Column('health_score', sa.Float(), nullable=True),
    sa.Column('risk_factors', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['task_categories.id'], ),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_task_occurrence_due_date', 'task_occurrences', ['due_date'], unique=False)
    op.create_index('ix_task_occurrence_start_date', 'task_occurrences', ['start_date'], unique=False)
    op.create_index('ix_task_occurrence_unique', 'task_occurrences', ['task_id', 'occurrence_num'], unique=True)
    op.create_index(op.f('ix_task_occurrences_id'), 'task_occurrences', ['id'], unique=False)
    op.create_index(op.f('ix_task_occurrences_task_id'), 'task_occurrences', ['task_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_occurrences_task_id'), table_name='task_occurrences')
    op.drop_index(op.f('ix_task_occurrences_id'), table_name='task_occurrences')
    op.drop_index('ix_task_occurrence_unique', table_name='task_occurrences')
    op.drop_index('ix_task_occurrence_start_date', table_name='task_occurrences')
    op.drop_index('ix_task_occurrence_due_date', table_name='task_occurrences')
    op.drop_table('task_occurrences')
    # ### end Alembic commands ###
