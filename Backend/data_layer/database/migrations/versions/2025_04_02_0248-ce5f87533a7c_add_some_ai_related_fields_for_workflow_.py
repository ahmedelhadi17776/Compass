"""add some ai related fields for workflow sys

Revision ID: ce5f87533a7c
Revises: 02d4792a81c8
Create Date: 2025-04-02 02:48:33.445298+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ce5f87533a7c'
down_revision: Union[str, None] = '02d4792a81c8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('workflow_executions', sa.Column('execution_priority', sa.Integer(), nullable=False))
    op.add_column('workflow_executions', sa.Column('execution_metadata', sa.JSON(), nullable=False))
    op.alter_column('workflow_executions', 'result',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.add_column('workflow_step_executions', sa.Column('execution_priority', sa.Integer(), nullable=False))
    op.add_column('workflow_step_executions', sa.Column('execution_metadata', sa.JSON(), nullable=False))
    op.alter_column('workflow_step_executions', 'result',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('workflows', 'ai_confidence_threshold',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('workflows', 'ai_override_rules',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('workflows', 'ai_learning_data',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('workflows', 'average_completion_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('workflows', 'success_rate',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('workflows', 'optimization_score',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('workflows', 'bottleneck_analysis',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('workflows', 'bottleneck_analysis',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('workflows', 'optimization_score',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('workflows', 'success_rate',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('workflows', 'average_completion_time',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('workflows', 'ai_learning_data',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('workflows', 'ai_override_rules',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('workflows', 'ai_confidence_threshold',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('workflow_step_executions', 'result',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.drop_column('workflow_step_executions', 'execution_metadata')
    op.drop_column('workflow_step_executions', 'execution_priority')
    op.alter_column('workflow_executions', 'result',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.drop_column('workflow_executions', 'execution_metadata')
    op.drop_column('workflow_executions', 'execution_priority')
    # ### end Alembic commands ###
