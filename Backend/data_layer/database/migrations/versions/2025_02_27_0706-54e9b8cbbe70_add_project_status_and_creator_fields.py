"""Add project status and creator fields

Revision ID: 54e9b8cbbe70
Revises: 
Create Date: 2025-02-27 07:06:29.442698+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '54e9b8cbbe70'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_types',
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('type')
    )
    op.create_table('ai_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.Column('storage_path', sa.String(length=255), nullable=True),
    sa.Column('model_metadata', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_ai_model_name_version', 'ai_models', ['name', 'version'], unique=True)
    op.create_index('ix_ai_model_status', 'ai_models', ['status'], unique=False)
    op.create_index('ix_ai_model_type', 'ai_models', ['type'], unique=False)
    op.create_index(op.f('ix_ai_models_id'), 'ai_models', ['id'], unique=False)
    op.create_table('model_types',
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('type')
    )
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=False)
    op.create_index(op.f('ix_organizations_name'), 'organizations', ['name'], unique=True)
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('resource', sa.Enum('TASK', 'PROJECT', 'USER', 'ROLE', 'CALENDAR', 'FILE', 'SETTING', 'REPORT', 'AI_MODEL', 'WORKFLOW', name='resourcetype'), nullable=False),
    sa.Column('action', sa.Enum('CREATE', 'READ', 'UPDATE', 'DELETE', 'EXECUTE', 'MANAGE', 'SHARE', 'APPROVE', name='actiontype'), nullable=False),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.create_index(op.f('ix_permissions_name'), 'permissions', ['name'], unique=True)
    op.create_index('ix_permissions_resource_action', 'permissions', ['resource', 'action'], unique=True)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('subscription_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_subscription_plans_created_at', 'subscription_plans', ['created_at'], unique=False)
    op.create_index(op.f('ix_subscription_plans_id'), 'subscription_plans', ['id'], unique=False)
    op.create_index('ix_subscription_plans_name', 'subscription_plans', ['name'], unique=True)
    op.create_table('task_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color_code', sa.String(length=20), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['task_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_categories_id'), 'task_categories', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('avatar_url', sa.String(length=255), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('locale', sa.String(length=50), nullable=True),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=True),
    sa.Column('mfa_secret', sa.String(length=255), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('last_failed_login', sa.DateTime(), nullable=True),
    sa.Column('account_locked_until', sa.DateTime(), nullable=True),
    sa.Column('password_changed_at', sa.DateTime(), nullable=True),
    sa.Column('force_password_change', sa.Boolean(), nullable=True),
    sa.Column('security_questions', sa.JSON(), nullable=True),
    sa.Column('allowed_ip_ranges', sa.JSON(), nullable=True),
    sa.Column('max_sessions', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_account_locked_until', 'users', ['account_locked_until'], unique=False)
    op.create_index('ix_user_created_at', 'users', ['created_at'], unique=False)
    op.create_index('ix_user_email', 'users', ['email'], unique=False)
    op.create_index('ix_user_last_login', 'users', ['last_login'], unique=False)
    op.create_index('ix_user_organization_id', 'users', ['organization_id'], unique=False)
    op.create_index('ix_user_phone_number', 'users', ['phone_number'], unique=False)
    op.create_index('ix_user_username', 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('agent_actions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_type', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('request_id', sa.String(length=100), nullable=True),
    sa.Column('action_data', sa.JSON(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_agent_action_agent_type', 'agent_actions', ['agent_type'], unique=False)
    op.create_index('ix_agent_action_status', 'agent_actions', ['status'], unique=False)
    op.create_index('ix_agent_action_timestamp', 'agent_actions', ['timestamp'], unique=False)
    op.create_index('ix_agent_action_user_id', 'agent_actions', ['user_id'], unique=False)
    op.create_index(op.f('ix_agent_actions_id'), 'agent_actions', ['id'], unique=False)
    op.create_table('ai_agent_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ai_model_id', sa.Integer(), nullable=False),
    sa.Column('agent_type', sa.String(length=100), nullable=True),
    sa.Column('interaction_type', sa.String(length=100), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('model_version', sa.String(length=50), nullable=False),
    sa.Column('model_parameters', sa.JSON(), nullable=True),
    sa.Column('execution_time', sa.Float(), nullable=True),
    sa.Column('token_usage', sa.JSON(), nullable=True),
    sa.Column('cache_hit', sa.Boolean(), nullable=True),
    sa.Column('error_logs', sa.JSON(), nullable=True),
    sa.Column('performance_metrics', sa.JSON(), nullable=True),
    sa.Column('feedback_score', sa.Float(), nullable=True),
    sa.Column('was_helpful', sa.Boolean(), nullable=True),
    sa.Column('improvement_suggestions', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['ai_model_id'], ['ai_models.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_ai_agent_interactions_agent_type', 'ai_agent_interactions', ['agent_type'], unique=False)
    op.create_index('ix_ai_agent_interactions_created_at', 'ai_agent_interactions', ['created_at'], unique=False)
    op.create_index('ix_ai_agent_interactions_feedback_score', 'ai_agent_interactions', ['feedback_score'], unique=False)
    op.create_index(op.f('ix_ai_agent_interactions_id'), 'ai_agent_interactions', ['id'], unique=False)
    op.create_index('ix_ai_agent_interactions_model_version', 'ai_agent_interactions', ['model_version'], unique=False)
    op.create_index('ix_ai_agent_interactions_success_rate', 'ai_agent_interactions', ['success_rate'], unique=False)
    op.create_index('ix_ai_agent_interactions_user_id', 'ai_agent_interactions', ['user_id'], unique=False)
    op.create_table('calendar_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('is_all_day', sa.Boolean(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_calendar_events_end_time', 'calendar_events', ['end_time'], unique=False)
    op.create_index('ix_calendar_events_external_id', 'calendar_events', ['external_id'], unique=False)
    op.create_index(op.f('ix_calendar_events_id'), 'calendar_events', ['id'], unique=False)
    op.create_index('ix_calendar_events_start_time', 'calendar_events', ['start_time'], unique=False)
    op.create_index('ix_calendar_events_user_id', 'calendar_events', ['user_id'], unique=False)
    op.create_table('context_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('multimodal_data', sa.JSON(), nullable=True),
    sa.Column('derived_context', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_context_snapshots_id'), 'context_snapshots', ['id'], unique=False)
    op.create_table('daily_summaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('completed_tasks', sa.JSON(), nullable=True),
    sa.Column('pending_tasks', sa.JSON(), nullable=True),
    sa.Column('productivity_score', sa.Float(), nullable=True),
    sa.Column('focus_time', sa.Integer(), nullable=True),
    sa.Column('meeting_time', sa.Integer(), nullable=True),
    sa.Column('ai_interactions', sa.JSON(), nullable=True),
    sa.Column('wellness_summary', sa.JSON(), nullable=True),
    sa.Column('next_day_suggestions', sa.Text(), nullable=True),
    sa.Column('highlights', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_daily_summaries_date', 'daily_summaries', ['date'], unique=False)
    op.create_index(op.f('ix_daily_summaries_id'), 'daily_summaries', ['id'], unique=False)
    op.create_index('ix_daily_summaries_productivity_score', 'daily_summaries', ['productivity_score'], unique=False)
    op.create_index('ix_daily_summaries_user_id', 'daily_summaries', ['user_id'], unique=False)
    op.create_table('email_organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email_rules', sa.JSON(), nullable=True),
    sa.Column('priority_settings', sa.JSON(), nullable=True),
    sa.Column('auto_reply_templates', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_organization_id'), 'email_organization', ['id'], unique=False)
    op.create_index('ix_email_organization_user_id', 'email_organization', ['user_id'], unique=False)
    op.create_table('emotional_intelligence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('stress_level', sa.Float(), nullable=True),
    sa.Column('stress_factors', sa.JSON(), nullable=True),
    sa.Column('fatigue_score', sa.Float(), nullable=True),
    sa.Column('screen_time', sa.Integer(), nullable=True),
    sa.Column('break_frequency', sa.Integer(), nullable=True),
    sa.Column('posture_score', sa.Float(), nullable=True),
    sa.Column('focus_duration', sa.Integer(), nullable=True),
    sa.Column('distraction_count', sa.Integer(), nullable=True),
    sa.Column('productivity_score', sa.Float(), nullable=True),
    sa.Column('work_rhythm_pattern', sa.JSON(), nullable=True),
    sa.Column('noise_level', sa.Float(), nullable=True),
    sa.Column('lighting_condition', sa.String(length=50), nullable=True),
    sa.Column('workspace_ergonomics', sa.JSON(), nullable=True),
    sa.Column('cognitive_load_score', sa.Float(), nullable=True),
    sa.Column('task_complexity_level', sa.Integer(), nullable=True),
    sa.Column('context_switching_frequency', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_emotional_intelligence_id'), 'emotional_intelligence', ['id'], unique=False)
    op.create_index('ix_emotional_intelligence_timestamp', 'emotional_intelligence', ['timestamp'], unique=False)
    op.create_index('ix_emotional_intelligence_user_id', 'emotional_intelligence', ['user_id'], unique=False)
    op.create_table('files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('file_path', sa.String(length=255), nullable=True),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_file_created_at', 'files', ['created_at'], unique=False)
    op.create_index('ix_file_type', 'files', ['file_type'], unique=False)
    op.create_index('ix_file_user_id', 'files', ['user_id'], unique=False)
    op.create_index(op.f('ix_files_id'), 'files', ['id'], unique=False)
    op.create_table('knowledge_base',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('embeddings', sa.LargeBinary(), nullable=True),
    sa.Column('source_url', sa.String(length=255), nullable=True),
    sa.Column('entity_name', sa.String(length=255), nullable=True),
    sa.Column('relationships', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_knowledge_base_entity_name', 'knowledge_base', ['entity_name'], unique=False)
    op.create_index(op.f('ix_knowledge_base_id'), 'knowledge_base', ['id'], unique=False)
    op.create_index('ix_knowledge_base_user_id', 'knowledge_base', ['user_id'], unique=False)
    op.create_table('productivity_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('total_focus_time', sa.Integer(), nullable=True),
    sa.Column('focus_sessions', sa.Integer(), nullable=True),
    sa.Column('average_focus_duration', sa.Float(), nullable=True),
    sa.Column('deep_work_periods', sa.JSON(), nullable=True),
    sa.Column('total_break_time', sa.Integer(), nullable=True),
    sa.Column('break_intervals', sa.JSON(), nullable=True),
    sa.Column('break_adherence_score', sa.Float(), nullable=True),
    sa.Column('optimal_break_schedule', sa.JSON(), nullable=True),
    sa.Column('tasks_completed', sa.Integer(), nullable=True),
    sa.Column('tasks_in_progress', sa.Integer(), nullable=True),
    sa.Column('completion_rate', sa.Float(), nullable=True),
    sa.Column('average_completion_time', sa.Float(), nullable=True),
    sa.Column('task_completion_patterns', sa.JSON(), nullable=True),
    sa.Column('context_switches', sa.Integer(), nullable=True),
    sa.Column('workflow_optimization_score', sa.Float(), nullable=True),
    sa.Column('bottleneck_analysis', sa.JSON(), nullable=True),
    sa.Column('time_allocation', sa.JSON(), nullable=True),
    sa.Column('meeting_efficiency', sa.Float(), nullable=True),
    sa.Column('idle_time', sa.Integer(), nullable=True),
    sa.Column('overtime_patterns', sa.JSON(), nullable=True),
    sa.Column('productivity_insights', sa.JSON(), nullable=True),
    sa.Column('improvement_suggestions', sa.JSON(), nullable=True),
    sa.Column('productivity_trends', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_productivity_metrics_date', 'productivity_metrics', ['date'], unique=False)
    op.create_index(op.f('ix_productivity_metrics_id'), 'productivity_metrics', ['id'], unique=False)
    op.create_index('ix_productivity_metrics_user_id', 'productivity_metrics', ['user_id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'ARCHIVED', 'ON_HOLD', name='projectstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_project_created_at', 'projects', ['created_at'], unique=False)
    op.create_index('ix_project_name', 'projects', ['name'], unique=False)
    op.create_index('ix_project_organization_id', 'projects', ['organization_id'], unique=False)
    op.create_index('ix_project_status', 'projects', ['status'], unique=False)
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_index(op.f('ix_projects_organization_id'), 'projects', ['organization_id'], unique=False)
    op.create_index('uq_project_org_name', 'projects', ['organization_id', 'name'], unique=True)
    op.create_table('rag_queries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('query_text', sa.Text(), nullable=False),
    sa.Column('context_used', sa.JSON(), nullable=True),
    sa.Column('response', sa.Text(), nullable=True),
    sa.Column('relevance_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_rag_queries_created_at', 'rag_queries', ['created_at'], unique=False)
    op.create_index(op.f('ix_rag_queries_id'), 'rag_queries', ['id'], unique=False)
    op.create_index('ix_rag_queries_user_id', 'rag_queries', ['user_id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('granted_by', sa.Integer(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('restrictions', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'EXPIRED', 'REVOKED', 'SUSPICIOUS', name='sessionstatus'), nullable=False),
    sa.Column('device_info', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=100), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('location_info', sa.JSON(), nullable=True),
    sa.Column('mfa_verified', sa.Boolean(), nullable=True),
    sa.Column('last_token_refresh', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('last_activity', sa.DateTime(), nullable=True),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('revocation_reason', sa.String(length=255), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('refresh_token'),
    sa.UniqueConstraint('token')
    )
    op.create_index('ix_sessions_expires_at', 'sessions', ['expires_at'], unique=False)
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.create_index('ix_sessions_last_activity', 'sessions', ['last_activity'], unique=False)
    op.create_index('ix_sessions_status', 'sessions', ['status'], unique=False)
    op.create_index('ix_sessions_token', 'sessions', ['token'], unique=True)
    op.create_index('ix_sessions_user_id', 'sessions', ['user_id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_subscriptions_expires_at', 'subscriptions', ['expires_at'], unique=False)
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    op.create_index('ix_subscriptions_plan_id', 'subscriptions', ['plan_id'], unique=False)
    op.create_index('ix_subscriptions_status', 'subscriptions', ['status'], unique=False)
    op.create_index('ix_subscriptions_user_id', 'subscriptions', ['user_id'], unique=False)
    op.create_table('system_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(length=50), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('trace_id', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_system_logs_category', 'system_logs', ['category'], unique=False)
    op.create_index('ix_system_logs_created_at', 'system_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_system_logs_id'), 'system_logs', ['id'], unique=False)
    op.create_index('ix_system_logs_level', 'system_logs', ['level'], unique=False)
    op.create_index('ix_system_logs_user_id', 'system_logs', ['user_id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('theme', sa.String(length=50), nullable=True),
    sa.Column('language', sa.String(length=50), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('date_format', sa.String(length=50), nullable=True),
    sa.Column('time_format', sa.String(length=50), nullable=True),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('accessibility_settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_preferences_id'), 'user_preferences', ['id'], unique=False)
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('user_workspace_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('clipboard_history', sa.JSON(), nullable=True),
    sa.Column('focus_mode_settings', sa.JSON(), nullable=True),
    sa.Column('distraction_blocker_rules', sa.JSON(), nullable=True),
    sa.Column('screen_time_limits', sa.JSON(), nullable=True),
    sa.Column('break_reminder_settings', sa.JSON(), nullable=True),
    sa.Column('eye_care_settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_workspace_settings_id'), 'user_workspace_settings', ['id'], unique=False)
    op.create_index('ix_workspace_settings_user_id', 'user_workspace_settings', ['user_id'], unique=False)
    op.create_table('workflows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('workflow_type', sa.Enum('SEQUENTIAL', 'PARALLEL', 'CONDITIONAL', 'AI_DRIVEN', 'HYBRID', name='workflowtype'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACTIVE', 'PAUSED', 'COMPLETED', 'FAILED', 'CANCELLED', 'ARCHIVED', 'UNDER_REVIEW', 'OPTIMIZING', name='workflowstatus'), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('workflow_metadata', sa.JSON(), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('ai_enabled', sa.Boolean(), nullable=True),
    sa.Column('ai_confidence_threshold', sa.Float(), nullable=True),
    sa.Column('ai_override_rules', sa.JSON(), nullable=True),
    sa.Column('ai_learning_data', sa.JSON(), nullable=True),
    sa.Column('average_completion_time', sa.Float(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('optimization_score', sa.Float(), nullable=True),
    sa.Column('bottleneck_analysis', sa.JSON(), nullable=True),
    sa.Column('estimated_duration', sa.Integer(), nullable=True),
    sa.Column('actual_duration', sa.Integer(), nullable=True),
    sa.Column('schedule_constraints', sa.JSON(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('error_handling_config', sa.JSON(), nullable=True),
    sa.Column('retry_policy', sa.JSON(), nullable=True),
    sa.Column('fallback_steps', sa.JSON(), nullable=True),
    sa.Column('compliance_rules', sa.JSON(), nullable=True),
    sa.Column('audit_trail', sa.JSON(), nullable=True),
    sa.Column('access_control', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_executed_at', sa.DateTime(), nullable=True),
    sa.Column('next_scheduled_run', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_workflow_created_at', 'workflows', ['created_at'], unique=False)
    op.create_index('ix_workflow_optimization_score', 'workflows', ['optimization_score'], unique=False)
    op.create_index('ix_workflow_organization_id', 'workflows', ['organization_id'], unique=False)
    op.create_index('ix_workflow_status', 'workflows', ['status'], unique=False)
    op.create_index('ix_workflow_success_rate', 'workflows', ['success_rate'], unique=False)
    op.create_index('ix_workflow_type', 'workflows', ['workflow_type'], unique=False)
    op.create_index(op.f('ix_workflows_id'), 'workflows', ['id'], unique=False)
    op.create_table('agent_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_action_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('feedback_score', sa.Integer(), nullable=True),
    sa.Column('feedback_text', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_action_id'], ['agent_actions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_feedback_id'), 'agent_feedback', ['id'], unique=False)
    op.create_table('meeting_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calendar_event_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('ai_summary', sa.Text(), nullable=True),
    sa.Column('action_items', sa.JSON(), nullable=True),
    sa.Column('attendees', sa.JSON(), nullable=True),
    sa.Column('transcription', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['calendar_event_id'], ['calendar_events.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_meeting_notes_calendar_event_id', 'meeting_notes', ['calendar_event_id'], unique=False)
    op.create_index('ix_meeting_notes_created_at', 'meeting_notes', ['created_at'], unique=False)
    op.create_index(op.f('ix_meeting_notes_id'), 'meeting_notes', ['id'], unique=False)
    op.create_index('ix_meeting_notes_user_id', 'meeting_notes', ['user_id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('transaction_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_index('ix_payments_payment_date', 'payments', ['payment_date'], unique=False)
    op.create_index('ix_payments_status', 'payments', ['status'], unique=False)
    op.create_index('ix_payments_subscription_id', 'payments', ['subscription_id'], unique=False)
    op.create_index('ix_payments_transaction_id', 'payments', ['transaction_id'], unique=True)
    op.create_table('project_members',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=100), nullable=True),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id', 'user_id')
    )
    op.create_table('security_audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.Enum('LOGIN', 'LOGOUT', 'PASSWORD_CHANGE', 'MFA_CHANGE', 'PERMISSION_CHANGE', 'ROLE_CHANGE', 'DATA_ACCESS', 'DATA_MODIFICATION', 'SECURITY_SETTING_CHANGE', 'SESSION_EXPIRED', 'FAILED_LOGIN', 'SUSPICIOUS_ACTIVITY', name='auditeventtype'), nullable=False),
    sa.Column('ip_address', sa.String(length=100), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('request_path', sa.String(length=255), nullable=True),
    sa.Column('request_method', sa.String(length=20), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('failure_reason', sa.String(length=255), nullable=True),
    sa.Column('risk_score', sa.Integer(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_security_audit_logs_created_at', 'security_audit_logs', ['created_at'], unique=False)
    op.create_index('ix_security_audit_logs_event_type', 'security_audit_logs', ['event_type'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_id'), 'security_audit_logs', ['id'], unique=False)
    op.create_index('ix_security_audit_logs_ip_address', 'security_audit_logs', ['ip_address'], unique=False)
    op.create_index('ix_security_audit_logs_risk_score', 'security_audit_logs', ['risk_score'], unique=False)
    op.create_index('ix_security_audit_logs_user_id', 'security_audit_logs', ['user_id'], unique=False)
    op.create_table('workflow_agent_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('interaction_type', sa.String(length=100), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('interaction_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_actions.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_workflow_agent_links_agent_id', 'workflow_agent_links', ['agent_id'], unique=False)
    op.create_index(op.f('ix_workflow_agent_links_id'), 'workflow_agent_links', ['id'], unique=False)
    op.create_index('ix_workflow_agent_links_workflow_id', 'workflow_agent_links', ['workflow_id'], unique=False)
    op.create_table('workflow_executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflow_executions_id'), 'workflow_executions', ['id'], unique=False)
    op.create_table('workflow_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('step_type', sa.String(length=50), nullable=True),
    sa.Column('step_order', sa.Integer(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.Column('retry_config', sa.JSON(), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('auto_advance', sa.Boolean(), nullable=True),
    sa.Column('can_revert', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_workflow_step_order', 'workflow_steps', ['workflow_id', 'step_order'], unique=True)
    op.create_index('ix_workflow_step_workflow_id', 'workflow_steps', ['workflow_id'], unique=False)
    op.create_index(op.f('ix_workflow_steps_id'), 'workflow_steps', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('TODO', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'BLOCKED', 'UNDER_REVIEW', 'DEFERRED', name='taskstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='taskpriority'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('assignee_id', sa.Integer(), nullable=True),
    sa.Column('reviewer_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('parent_task_id', sa.Integer(), nullable=True),
    sa.Column('estimated_hours', sa.Float(), nullable=True),
    sa.Column('actual_hours', sa.Float(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.Column('_dependencies_list', sa.JSON(), nullable=False),
    sa.Column('current_workflow_step_id', sa.Integer(), nullable=True),
    sa.Column('ai_suggestions', sa.JSON(), nullable=True),
    sa.Column('complexity_score', sa.Float(), nullable=True),
    sa.Column('time_spent', sa.Integer(), nullable=True),
    sa.Column('time_estimates', sa.JSON(), nullable=True),
    sa.Column('focus_sessions', sa.JSON(), nullable=True),
    sa.Column('interruption_logs', sa.JSON(), nullable=True),
    sa.Column('progress_metrics', sa.JSON(), nullable=False),
    sa.Column('blockers', sa.JSON(), nullable=False),
    sa.Column('health_score', sa.Float(), nullable=True),
    sa.Column('risk_factors', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['task_categories.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['current_workflow_step_id'], ['workflow_steps.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['parent_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_task_assignee_id', 'tasks', ['assignee_id'], unique=False)
    op.create_index('ix_task_category_id', 'tasks', ['category_id'], unique=False)
    op.create_index('ix_task_created_at', 'tasks', ['created_at'], unique=False)
    op.create_index('ix_task_creator_id', 'tasks', ['creator_id'], unique=False)
    op.create_index('ix_task_due_date', 'tasks', ['due_date'], unique=False)
    op.create_index('ix_task_health_score', 'tasks', ['health_score'], unique=False)
    op.create_index('ix_task_organization_id', 'tasks', ['organization_id'], unique=False)
    op.create_index('ix_task_priority', 'tasks', ['priority'], unique=False)
    op.create_index('ix_task_project_id', 'tasks', ['project_id'], unique=False)
    op.create_index('ix_task_status', 'tasks', ['status'], unique=False)
    op.create_index('ix_task_workflow_id', 'tasks', ['workflow_id'], unique=False)
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_index(op.f('ix_tasks_project_id'), 'tasks', ['project_id'], unique=False)
    op.create_index(op.f('ix_tasks_title'), 'tasks', ['title'], unique=False)
    op.create_index(op.f('ix_tasks_workflow_id'), 'tasks', ['workflow_id'], unique=False)
    op.create_table('workflow_step_executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('execution_id', sa.Integer(), nullable=False),
    sa.Column('step_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['execution_id'], ['workflow_executions.id'], ),
    sa.ForeignKeyConstraint(['step_id'], ['workflow_steps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflow_step_executions_id'), 'workflow_step_executions', ['id'], unique=False)
    op.create_table('workflow_transitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_step_id', sa.Integer(), nullable=True),
    sa.Column('to_step_id', sa.Integer(), nullable=True),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('triggers', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_step_id'], ['workflow_steps.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_step_id'], ['workflow_steps.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflow_transitions_id'), 'workflow_transitions', ['id'], unique=False)
    op.create_table('task_agent_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('interaction_type', sa.String(length=100), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('action_taken', sa.String(length=100), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_actions.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_task_agent_interactions_agent_id', 'task_agent_interactions', ['agent_id'], unique=False)
    op.create_index('ix_task_agent_interactions_created_at', 'task_agent_interactions', ['created_at'], unique=False)
    op.create_index(op.f('ix_task_agent_interactions_id'), 'task_agent_interactions', ['id'], unique=False)
    op.create_index('ix_task_agent_interactions_task_id', 'task_agent_interactions', ['task_id'], unique=False)
    op.create_table('task_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=255), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_task_attachments_created_at', 'task_attachments', ['created_at'], unique=False)
    op.create_index('ix_task_attachments_file_type', 'task_attachments', ['file_type'], unique=False)
    op.create_index(op.f('ix_task_attachments_id'), 'task_attachments', ['id'], unique=False)
    op.create_index('ix_task_attachments_task_id', 'task_attachments', ['task_id'], unique=False)
    op.create_index('ix_task_attachments_uploaded_by', 'task_attachments', ['uploaded_by'], unique=False)
    op.create_table('task_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=True),
    sa.Column('ai_model_id', sa.Integer(), nullable=True),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('ai_context_used', sa.JSON(), nullable=True),
    sa.Column('ai_generated_keywords', sa.JSON(), nullable=True),
    sa.Column('sentiment_analysis', sa.JSON(), nullable=True),
    sa.Column('suggested_actions', sa.JSON(), nullable=True),
    sa.Column('reference_sources', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['ai_model_id'], ['ai_models.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['task_comments.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_task_comments_ai_confidence_score', 'task_comments', ['ai_confidence_score'], unique=False)
    op.create_index('ix_task_comments_created_at', 'task_comments', ['created_at'], unique=False)
    op.create_index(op.f('ix_task_comments_id'), 'task_comments', ['id'], unique=False)
    op.create_index('ix_task_comments_is_ai_generated', 'task_comments', ['is_ai_generated'], unique=False)
    op.create_index('ix_task_comments_task_id', 'task_comments', ['task_id'], unique=False)
    op.create_index('ix_task_comments_user_id', 'task_comments', ['user_id'], unique=False)
    op.create_table('task_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('field', sa.String(length=100), nullable=True),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('workflow_step_id', sa.Integer(), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=True),
    sa.Column('ai_model_id', sa.Integer(), nullable=True),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True),
    sa.Column('ai_reasoning', sa.Text(), nullable=True),
    sa.Column('ai_context_used', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['ai_model_id'], ['ai_models.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workflow_step_id'], ['workflow_steps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_task_history_created_at', 'task_history', ['created_at'], unique=False)
    op.create_index(op.f('ix_task_history_id'), 'task_history', ['id'], unique=False)
    op.create_index('ix_task_history_is_ai_generated', 'task_history', ['is_ai_generated'], unique=False)
    op.create_index('ix_task_history_task_id', 'task_history', ['task_id'], unique=False)
    op.create_index('ix_task_history_user_id', 'task_history', ['user_id'], unique=False)
    op.create_table('todos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'ARCHIVED', name='todostatus'), nullable=True),
    sa.Column('priority', sa.Enum('HIGH', 'MEDIUM', 'LOW', name='todopriority'), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('reminder_time', sa.DateTime(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('recurrence_pattern', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('checklist', sa.JSON(), nullable=True),
    sa.Column('linked_task_id', sa.Integer(), nullable=True),
    sa.Column('linked_calendar_event_id', sa.Integer(), nullable=True),
    sa.Column('ai_generated', sa.Boolean(), nullable=True),
    sa.Column('ai_suggestions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('_completion_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['linked_calendar_event_id'], ['calendar_events.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['linked_task_id'], ['tasks.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_todos_created_at', 'todos', ['created_at'], unique=False)
    op.create_index('ix_todos_due_date', 'todos', ['due_date'], unique=False)
    op.create_index(op.f('ix_todos_id'), 'todos', ['id'], unique=False)
    op.create_index('ix_todos_priority', 'todos', ['priority'], unique=False)
    op.create_index('ix_todos_status', 'todos', ['status'], unique=False)
    op.create_index('ix_todos_user_id', 'todos', ['user_id'], unique=False)
    op.create_table('todo_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('todo_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.String(length=100), nullable=True),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('is_ai_change', sa.Boolean(), nullable=True),
    sa.Column('ai_reasoning', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['todo_id'], ['todos.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_todo_history_id'), 'todo_history', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_todo_history_id'), table_name='todo_history')
    op.drop_table('todo_history')
    op.drop_index('ix_todos_user_id', table_name='todos')
    op.drop_index('ix_todos_status', table_name='todos')
    op.drop_index('ix_todos_priority', table_name='todos')
    op.drop_index(op.f('ix_todos_id'), table_name='todos')
    op.drop_index('ix_todos_due_date', table_name='todos')
    op.drop_index('ix_todos_created_at', table_name='todos')
    op.drop_table('todos')
    op.drop_index('ix_task_history_user_id', table_name='task_history')
    op.drop_index('ix_task_history_task_id', table_name='task_history')
    op.drop_index('ix_task_history_is_ai_generated', table_name='task_history')
    op.drop_index(op.f('ix_task_history_id'), table_name='task_history')
    op.drop_index('ix_task_history_created_at', table_name='task_history')
    op.drop_table('task_history')
    op.drop_index('ix_task_comments_user_id', table_name='task_comments')
    op.drop_index('ix_task_comments_task_id', table_name='task_comments')
    op.drop_index('ix_task_comments_is_ai_generated', table_name='task_comments')
    op.drop_index(op.f('ix_task_comments_id'), table_name='task_comments')
    op.drop_index('ix_task_comments_created_at', table_name='task_comments')
    op.drop_index('ix_task_comments_ai_confidence_score', table_name='task_comments')
    op.drop_table('task_comments')
    op.drop_index('ix_task_attachments_uploaded_by', table_name='task_attachments')
    op.drop_index('ix_task_attachments_task_id', table_name='task_attachments')
    op.drop_index(op.f('ix_task_attachments_id'), table_name='task_attachments')
    op.drop_index('ix_task_attachments_file_type', table_name='task_attachments')
    op.drop_index('ix_task_attachments_created_at', table_name='task_attachments')
    op.drop_table('task_attachments')
    op.drop_index('ix_task_agent_interactions_task_id', table_name='task_agent_interactions')
    op.drop_index(op.f('ix_task_agent_interactions_id'), table_name='task_agent_interactions')
    op.drop_index('ix_task_agent_interactions_created_at', table_name='task_agent_interactions')
    op.drop_index('ix_task_agent_interactions_agent_id', table_name='task_agent_interactions')
    op.drop_table('task_agent_interactions')
    op.drop_index(op.f('ix_workflow_transitions_id'), table_name='workflow_transitions')
    op.drop_table('workflow_transitions')
    op.drop_index(op.f('ix_workflow_step_executions_id'), table_name='workflow_step_executions')
    op.drop_table('workflow_step_executions')
    op.drop_index(op.f('ix_tasks_workflow_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_title'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_project_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_index('ix_task_workflow_id', table_name='tasks')
    op.drop_index('ix_task_status', table_name='tasks')
    op.drop_index('ix_task_project_id', table_name='tasks')
    op.drop_index('ix_task_priority', table_name='tasks')
    op.drop_index('ix_task_organization_id', table_name='tasks')
    op.drop_index('ix_task_health_score', table_name='tasks')
    op.drop_index('ix_task_due_date', table_name='tasks')
    op.drop_index('ix_task_creator_id', table_name='tasks')
    op.drop_index('ix_task_created_at', table_name='tasks')
    op.drop_index('ix_task_category_id', table_name='tasks')
    op.drop_index('ix_task_assignee_id', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_workflow_steps_id'), table_name='workflow_steps')
    op.drop_index('ix_workflow_step_workflow_id', table_name='workflow_steps')
    op.drop_index('ix_workflow_step_order', table_name='workflow_steps')
    op.drop_table('workflow_steps')
    op.drop_index(op.f('ix_workflow_executions_id'), table_name='workflow_executions')
    op.drop_table('workflow_executions')
    op.drop_index('ix_workflow_agent_links_workflow_id', table_name='workflow_agent_links')
    op.drop_index(op.f('ix_workflow_agent_links_id'), table_name='workflow_agent_links')
    op.drop_index('ix_workflow_agent_links_agent_id', table_name='workflow_agent_links')
    op.drop_table('workflow_agent_links')
    op.drop_index('ix_security_audit_logs_user_id', table_name='security_audit_logs')
    op.drop_index('ix_security_audit_logs_risk_score', table_name='security_audit_logs')
    op.drop_index('ix_security_audit_logs_ip_address', table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_id'), table_name='security_audit_logs')
    op.drop_index('ix_security_audit_logs_event_type', table_name='security_audit_logs')
    op.drop_index('ix_security_audit_logs_created_at', table_name='security_audit_logs')
    op.drop_table('security_audit_logs')
    op.drop_table('project_members')
    op.drop_index('ix_payments_transaction_id', table_name='payments')
    op.drop_index('ix_payments_subscription_id', table_name='payments')
    op.drop_index('ix_payments_status', table_name='payments')
    op.drop_index('ix_payments_payment_date', table_name='payments')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index('ix_meeting_notes_user_id', table_name='meeting_notes')
    op.drop_index(op.f('ix_meeting_notes_id'), table_name='meeting_notes')
    op.drop_index('ix_meeting_notes_created_at', table_name='meeting_notes')
    op.drop_index('ix_meeting_notes_calendar_event_id', table_name='meeting_notes')
    op.drop_table('meeting_notes')
    op.drop_index(op.f('ix_agent_feedback_id'), table_name='agent_feedback')
    op.drop_table('agent_feedback')
    op.drop_index(op.f('ix_workflows_id'), table_name='workflows')
    op.drop_index('ix_workflow_type', table_name='workflows')
    op.drop_index('ix_workflow_success_rate', table_name='workflows')
    op.drop_index('ix_workflow_status', table_name='workflows')
    op.drop_index('ix_workflow_organization_id', table_name='workflows')
    op.drop_index('ix_workflow_optimization_score', table_name='workflows')
    op.drop_index('ix_workflow_created_at', table_name='workflows')
    op.drop_table('workflows')
    op.drop_index('ix_workspace_settings_user_id', table_name='user_workspace_settings')
    op.drop_index(op.f('ix_user_workspace_settings_id'), table_name='user_workspace_settings')
    op.drop_table('user_workspace_settings')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_user_preferences_id'), table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index('ix_system_logs_user_id', table_name='system_logs')
    op.drop_index('ix_system_logs_level', table_name='system_logs')
    op.drop_index(op.f('ix_system_logs_id'), table_name='system_logs')
    op.drop_index('ix_system_logs_created_at', table_name='system_logs')
    op.drop_index('ix_system_logs_category', table_name='system_logs')
    op.drop_table('system_logs')
    op.drop_index('ix_subscriptions_user_id', table_name='subscriptions')
    op.drop_index('ix_subscriptions_status', table_name='subscriptions')
    op.drop_index('ix_subscriptions_plan_id', table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_index('ix_subscriptions_expires_at', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index('ix_sessions_user_id', table_name='sessions')
    op.drop_index('ix_sessions_token', table_name='sessions')
    op.drop_index('ix_sessions_status', table_name='sessions')
    op.drop_index('ix_sessions_last_activity', table_name='sessions')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.drop_index('ix_sessions_expires_at', table_name='sessions')
    op.drop_table('sessions')
    op.drop_table('role_permissions')
    op.drop_index('ix_rag_queries_user_id', table_name='rag_queries')
    op.drop_index(op.f('ix_rag_queries_id'), table_name='rag_queries')
    op.drop_index('ix_rag_queries_created_at', table_name='rag_queries')
    op.drop_table('rag_queries')
    op.drop_index('uq_project_org_name', table_name='projects')
    op.drop_index(op.f('ix_projects_organization_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_index('ix_project_status', table_name='projects')
    op.drop_index('ix_project_organization_id', table_name='projects')
    op.drop_index('ix_project_name', table_name='projects')
    op.drop_index('ix_project_created_at', table_name='projects')
    op.drop_table('projects')
    op.drop_index('ix_productivity_metrics_user_id', table_name='productivity_metrics')
    op.drop_index(op.f('ix_productivity_metrics_id'), table_name='productivity_metrics')
    op.drop_index('ix_productivity_metrics_date', table_name='productivity_metrics')
    op.drop_table('productivity_metrics')
    op.drop_index('ix_knowledge_base_user_id', table_name='knowledge_base')
    op.drop_index(op.f('ix_knowledge_base_id'), table_name='knowledge_base')
    op.drop_index('ix_knowledge_base_entity_name', table_name='knowledge_base')
    op.drop_table('knowledge_base')
    op.drop_index(op.f('ix_files_id'), table_name='files')
    op.drop_index('ix_file_user_id', table_name='files')
    op.drop_index('ix_file_type', table_name='files')
    op.drop_index('ix_file_created_at', table_name='files')
    op.drop_table('files')
    op.drop_index('ix_emotional_intelligence_user_id', table_name='emotional_intelligence')
    op.drop_index('ix_emotional_intelligence_timestamp', table_name='emotional_intelligence')
    op.drop_index(op.f('ix_emotional_intelligence_id'), table_name='emotional_intelligence')
    op.drop_table('emotional_intelligence')
    op.drop_index('ix_email_organization_user_id', table_name='email_organization')
    op.drop_index(op.f('ix_email_organization_id'), table_name='email_organization')
    op.drop_table('email_organization')
    op.drop_index('ix_daily_summaries_user_id', table_name='daily_summaries')
    op.drop_index('ix_daily_summaries_productivity_score', table_name='daily_summaries')
    op.drop_index(op.f('ix_daily_summaries_id'), table_name='daily_summaries')
    op.drop_index('ix_daily_summaries_date', table_name='daily_summaries')
    op.drop_table('daily_summaries')
    op.drop_index(op.f('ix_context_snapshots_id'), table_name='context_snapshots')
    op.drop_table('context_snapshots')
    op.drop_index('ix_calendar_events_user_id', table_name='calendar_events')
    op.drop_index('ix_calendar_events_start_time', table_name='calendar_events')
    op.drop_index(op.f('ix_calendar_events_id'), table_name='calendar_events')
    op.drop_index('ix_calendar_events_external_id', table_name='calendar_events')
    op.drop_index('ix_calendar_events_end_time', table_name='calendar_events')
    op.drop_table('calendar_events')
    op.drop_index('ix_ai_agent_interactions_user_id', table_name='ai_agent_interactions')
    op.drop_index('ix_ai_agent_interactions_success_rate', table_name='ai_agent_interactions')
    op.drop_index('ix_ai_agent_interactions_model_version', table_name='ai_agent_interactions')
    op.drop_index(op.f('ix_ai_agent_interactions_id'), table_name='ai_agent_interactions')
    op.drop_index('ix_ai_agent_interactions_feedback_score', table_name='ai_agent_interactions')
    op.drop_index('ix_ai_agent_interactions_created_at', table_name='ai_agent_interactions')
    op.drop_index('ix_ai_agent_interactions_agent_type', table_name='ai_agent_interactions')
    op.drop_table('ai_agent_interactions')
    op.drop_index(op.f('ix_agent_actions_id'), table_name='agent_actions')
    op.drop_index('ix_agent_action_user_id', table_name='agent_actions')
    op.drop_index('ix_agent_action_timestamp', table_name='agent_actions')
    op.drop_index('ix_agent_action_status', table_name='agent_actions')
    op.drop_index('ix_agent_action_agent_type', table_name='agent_actions')
    op.drop_table('agent_actions')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('ix_user_username', table_name='users')
    op.drop_index('ix_user_phone_number', table_name='users')
    op.drop_index('ix_user_organization_id', table_name='users')
    op.drop_index('ix_user_last_login', table_name='users')
    op.drop_index('ix_user_email', table_name='users')
    op.drop_index('ix_user_created_at', table_name='users')
    op.drop_index('ix_user_account_locked_until', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_task_categories_id'), table_name='task_categories')
    op.drop_table('task_categories')
    op.drop_index('ix_subscription_plans_name', table_name='subscription_plans')
    op.drop_index(op.f('ix_subscription_plans_id'), table_name='subscription_plans')
    op.drop_index('ix_subscription_plans_created_at', table_name='subscription_plans')
    op.drop_table('subscription_plans')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index('ix_permissions_resource_action', table_name='permissions')
    op.drop_index(op.f('ix_permissions_name'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_organizations_name'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_table('organizations')
    op.drop_table('model_types')
    op.drop_index(op.f('ix_ai_models_id'), table_name='ai_models')
    op.drop_index('ix_ai_model_type', table_name='ai_models')
    op.drop_index('ix_ai_model_status', table_name='ai_models')
    op.drop_index('ix_ai_model_name_version', table_name='ai_models')
    op.drop_table('ai_models')
    op.drop_table('agent_types')
    # ### end Alembic commands ###
