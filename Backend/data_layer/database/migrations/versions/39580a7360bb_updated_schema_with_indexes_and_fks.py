"""Updated schema with indexes and FKs

Revision ID: 39580a7360bb
Revises: ef7efaf4a6e0
Create Date: 2025-02-12 05:21:59.259626

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '39580a7360bb'
down_revision: Union[str, None] = 'ef7efaf4a6e0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_organization_name', 'organizations', ['name'], unique=True)
    op.create_index('ix_project_name', 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_organization_id'), 'projects', ['organization_id'], unique=False)
    op.drop_constraint('projects_organization_id_fkey', 'projects', type_='foreignkey')
    op.create_foreign_key(None, 'projects', 'organizations', ['organization_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('roles_name_key', 'roles', type_='unique')
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.add_column('tasks', sa.Column('workflow_id', sa.Integer(), nullable=True))
    op.alter_column('tasks', 'status',
               existing_type=postgresql.ENUM('TODO', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='taskstatus'),
               nullable=False)
    op.create_index('ix_task_status', 'tasks', ['status'], unique=False)
    op.create_index(op.f('ix_tasks_project_id'), 'tasks', ['project_id'], unique=False)
    op.create_index(op.f('ix_tasks_title'), 'tasks', ['title'], unique=False)
    op.create_index(op.f('ix_tasks_workflow_id'), 'tasks', ['workflow_id'], unique=False)
    op.drop_constraint('tasks_project_id_fkey', 'tasks', type_='foreignkey')
    op.create_foreign_key(None, 'tasks', 'workflows', ['workflow_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'tasks', 'projects', ['project_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('user_roles_user_id_fkey', 'user_roles', type_='foreignkey')
    op.drop_constraint('user_roles_role_id_fkey', 'user_roles', type_='foreignkey')
    op.create_foreign_key(None, 'user_roles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'user_roles', 'roles', ['role_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.create_index('ix_user_email', 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.alter_column('workflows', 'status',
               existing_type=postgresql.ENUM('ACTIVE', 'ARCHIVED', name='workflowstatus'),
               nullable=False)
    op.create_index('ix_workflow_status', 'workflows', ['status'], unique=False)
    op.create_index(op.f('ix_workflows_name'), 'workflows', ['name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_workflows_name'), table_name='workflows')
    op.drop_index('ix_workflow_status', table_name='workflows')
    op.alter_column('workflows', 'status',
               existing_type=postgresql.ENUM('ACTIVE', 'ARCHIVED', name='workflowstatus'),
               nullable=True)
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('ix_user_email', table_name='users')
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.create_foreign_key('user_roles_role_id_fkey', 'user_roles', 'roles', ['role_id'], ['id'])
    op.create_foreign_key('user_roles_user_id_fkey', 'user_roles', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.create_foreign_key('tasks_project_id_fkey', 'tasks', 'projects', ['project_id'], ['id'])
    op.drop_index(op.f('ix_tasks_workflow_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_title'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_project_id'), table_name='tasks')
    op.drop_index('ix_task_status', table_name='tasks')
    op.alter_column('tasks', 'status',
               existing_type=postgresql.ENUM('TODO', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='taskstatus'),
               nullable=True)
    op.drop_column('tasks', 'workflow_id')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.create_unique_constraint('roles_name_key', 'roles', ['name'])
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.create_foreign_key('projects_organization_id_fkey', 'projects', 'organizations', ['organization_id'], ['id'])
    op.drop_index(op.f('ix_projects_organization_id'), table_name='projects')
    op.drop_index('ix_project_name', table_name='projects')
    op.drop_index('ix_organization_name', table_name='organizations')
    # ### end Alembic commands ###
