"""add tables

Revision ID: 52bf3dbf21ab
Revises: bf12565ff876
Create Date: 2024-12-28 15:51:43.885701

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '52bf3dbf21ab'
down_revision: Union[str, None] = 'bf12565ff876'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('background_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_type', sa.String(length=100), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'SUCCESS', 'FAILED', name='backgroundjobstatus'), nullable=False),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_background_jobs'))
    )
    op.create_index('ix_background_jobs_created_at', 'background_jobs', ['created_at'], unique=False)
    op.create_index('ix_background_jobs_status', 'background_jobs', ['status'], unique=False)
    op.create_table('subscription_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subscription_plans'))
    )
    op.create_index('ix_subscription_plans_name', 'subscription_plans', ['name'], unique=True)
    op.create_table('daily_habits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('habit_name', sa.String(length=255), nullable=False),
    sa.Column('frequency', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_daily_habits_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_daily_habits'))
    )
    op.create_index('ix_daily_habits_status', 'daily_habits', ['status'], unique=False)
    op.create_index('ix_daily_habits_user', 'daily_habits', ['user_id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plans.id'], name=op.f('fk_subscriptions_plan_id_subscription_plans')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_subscriptions_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subscriptions'))
    )
    op.create_index('ix_subscriptions_user', 'subscriptions', ['user_id'], unique=False)
    op.create_table('todos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_todos_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_todos'))
    )
    op.create_index('ix_todos_status', 'todos', ['status'], unique=False)
    op.create_index('ix_todos_user', 'todos', ['user_id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('payment_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('transaction_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], name=op.f('fk_payments_subscription_id_subscriptions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payments')),
    sa.UniqueConstraint('transaction_id', name=op.f('uq_payments_transaction_id'))
    )
    op.create_index('ix_payments_subscription', 'payments', ['subscription_id'], unique=False)
    op.add_column('security_audit_logs', sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('security_audit_logs', sa.Column('event_type', sa.String(), nullable=False))
    op.add_column('security_audit_logs', sa.Column('ip_address', sa.String(), nullable=True))
    op.add_column('security_audit_logs', sa.Column('user_agent', sa.String(), nullable=True))
    op.add_column('security_audit_logs', sa.Column('request_path', sa.String(), nullable=True))
    op.add_column('security_audit_logs', sa.Column('request_method', sa.String(), nullable=True))
    op.alter_column('security_audit_logs', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('fk_security_audit_logs_user_id_users', 'security_audit_logs', type_='foreignkey')
    op.create_foreign_key(op.f('fk_security_audit_logs_user_id_users'), 'security_audit_logs', 'users', ['user_id'], ['id'])
    op.add_column('security_events', sa.Column('action', sa.String(length=255), nullable=False))
    op.add_column('security_events', sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('security_events', sa.Column('event_type', sa.String(), nullable=False))
    op.add_column('security_events', sa.Column('ip_address', sa.String(), nullable=True))
    op.add_column('security_events', sa.Column('severity', sa.String(), nullable=True))
    op.add_column('security_events', sa.Column('description', sa.String(), nullable=True))
    op.add_column('security_events', sa.Column('event_metadata', sa.String(length=500), nullable=True))
    op.alter_column('security_events', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('fk_security_events_user_id_users', 'security_events', type_='foreignkey')
    op.create_foreign_key(op.f('fk_security_events_user_id_users'), 'security_events', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_security_events_user_id_users'), 'security_events', type_='foreignkey')
    op.create_foreign_key('fk_security_events_user_id_users', 'security_events', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('security_events', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('security_events', 'event_metadata')
    op.drop_column('security_events', 'description')
    op.drop_column('security_events', 'severity')
    op.drop_column('security_events', 'ip_address')
    op.drop_column('security_events', 'event_type')
    op.drop_column('security_events', 'timestamp')
    op.drop_column('security_events', 'action')
    op.drop_constraint(op.f('fk_security_audit_logs_user_id_users'), 'security_audit_logs', type_='foreignkey')
    op.create_foreign_key('fk_security_audit_logs_user_id_users', 'security_audit_logs', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('security_audit_logs', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('security_audit_logs', 'request_method')
    op.drop_column('security_audit_logs', 'request_path')
    op.drop_column('security_audit_logs', 'user_agent')
    op.drop_column('security_audit_logs', 'ip_address')
    op.drop_column('security_audit_logs', 'event_type')
    op.drop_column('security_audit_logs', 'timestamp')
    op.drop_index('ix_payments_subscription', table_name='payments')
    op.drop_table('payments')
    op.drop_index('ix_todos_user', table_name='todos')
    op.drop_index('ix_todos_status', table_name='todos')
    op.drop_table('todos')
    op.drop_index('ix_subscriptions_user', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index('ix_daily_habits_user', table_name='daily_habits')
    op.drop_index('ix_daily_habits_status', table_name='daily_habits')
    op.drop_table('daily_habits')
    op.drop_index('ix_subscription_plans_name', table_name='subscription_plans')
    op.drop_table('subscription_plans')
    op.drop_index('ix_background_jobs_status', table_name='background_jobs')
    op.drop_index('ix_background_jobs_created_at', table_name='background_jobs')
    op.drop_table('background_jobs')
    # ### end Alembic commands ###
